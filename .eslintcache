[{"E:\\Code\\DEX\\chewyswap-farms\\src\\index.tsx":"1","E:\\Code\\DEX\\chewyswap-farms\\src\\App.tsx":"2","E:\\Code\\DEX\\chewyswap-farms\\src\\Providers.tsx":"3","E:\\Code\\DEX\\chewyswap-farms\\src\\style\\Global.tsx":"4","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\PageLoader.tsx":"5","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\NotFound.tsx":"6","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Nft\\components\\NftGlobalNotification.tsx":"7","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\hooks.ts":"8","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\index.ts":"9","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\index.ts":"10","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getRpcUrl.ts":"11","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Menu\\index.tsx":"12","E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\ThemeContext.tsx":"13","E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\RefreshContext.tsx":"14","E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\BlockContext.tsx":"15","E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\Localisation\\languageContext.tsx":"16","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\layout\\Page.tsx":"17","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\index.ts":"18","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\actions.ts":"19","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\types.ts":"20","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Menu\\config.ts":"21","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\Home.tsx":"22","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\Farms.tsx":"23","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\multicall.ts":"24","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useI18n.ts":"25","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\nfts.ts":"26","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\layout\\Container.tsx":"27","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useRefresh.ts":"28","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTheme.ts":"29","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\web3.ts":"30","E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\Localisation\\translationsContext.ts":"31","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\localisation\\languageCodes.ts":"32","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\translateTextHelpers.ts":"33","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\TwitterCard.tsx":"34","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\Divider.tsx":"35","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\FarmCard.tsx":"36","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\TotalValueLockedCard.tsx":"37","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CakeStats.tsx":"38","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\FarmStakingCard.tsx":"39","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\pools\\index.ts":"40","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\farms\\index.ts":"41","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\addressHelpers.ts":"42","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmTabButtons\\index.tsx":"43","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\layout\\Flex.tsx":"44","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\formatBalance.ts":"45","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useAllEarnings.ts":"46","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\ApyButton.tsx":"47","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\CardActionsContainer.tsx":"48","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\CardHeading.tsx":"49","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\DetailsSection.tsx":"50","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CardValue.tsx":"51","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\index.ts":"52","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\farms\\fetchFarmUser.ts":"53","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\farms\\fetchFarms.ts":"54","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\pools\\fetchPoolsUser.ts":"55","E:\\Code\\DEX\\chewyswap-farms\\src\\state\\pools\\fetchPools.ts":"56","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\ApyCalculatorModal.tsx":"57","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\HarvestAction.tsx":"58","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\StakeAction.tsx":"59","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTokenBalance.ts":"60","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\farms.ts":"61","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\contracts.ts":"62","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CakeWalletBalance.tsx":"63","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CakeHarvestBalance.tsx":"64","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\pools.ts":"65","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ExpandableSectionButton\\index.ts":"66","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getLiquidityUrlPathParts.ts":"67","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useApprove.ts":"68","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useStake.ts":"69","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\erc20.ts":"70","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Tags.tsx":"71","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\UnlockButton.tsx":"72","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\WithdrawModal.tsx":"73","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\DepositModal.tsx":"74","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useFarmsWithBalance.ts":"75","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useHarvest.ts":"76","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\index.ts":"77","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ExpandableSectionButton\\ExpandableSectionButton.tsx":"78","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useContract.ts":"79","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\compoundApyHelpers.ts":"80","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useUnstake.ts":"81","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\ifo.ts":"82","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\callHelpers.ts":"83","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useWeb3.ts":"84","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ModalActions\\index.ts":"85","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TokenInput\\index.ts":"86","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ModalActions\\ModalActions.tsx":"87","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TokenInput\\TokenInput.tsx":"88","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Spacer\\index.ts":"89","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Input\\index.ts":"90","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Spacer\\Spacer.tsx":"91","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Input\\Input.tsx":"92","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useAnnouncements.ts":"93","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\queryKeys.ts":"94","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\MarkdownText\\index.tsx":"95","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\index.ts":"96","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\Lottery.tsx":"97","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\PastDrawsPage.tsx":"98","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\NextDrawPage.tsx":"99","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Divider.tsx":"100","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Hero.tsx":"101","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\lotteryUtils.js":"102","E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\PastLotteryDataContext.tsx":"103","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\UnlockWalletCard.tsx":"104","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\WinningNumbers.tsx":"105","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\HowItWorks.tsx":"106","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\PastDrawsHistoryCard.tsx":"107","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\LotteryProgress.tsx":"108","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTickets.ts":"109","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\index.tsx":"110","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\index.tsx":"111","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\YourPrizesCard\\index.tsx":"112","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TotalPrizesCard\\index.tsx":"113","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\helpers\\CountdownHelpers.ts":"114","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\Legend.tsx":"115","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\HistoryChart.tsx":"116","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useGetLotteryHasDrawn.ts":"117","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTimer.ts":"118","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\hooks\\useGetRecentLotteryRoundData.ts":"119","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Loading.tsx":"120","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastLotterySearcher.tsx":"121","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\YourPrizesCard\\PrizesWonContent.tsx":"122","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\TicketActions.tsx":"123","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\YourPrizesCard\\NoPrizesContent.tsx":"124","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastRoundCard.tsx":"125","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PrizeGrid.tsx":"126","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\LineChartWrapper.tsx":"127","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getLotteryRoundData.ts":"128","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getTimePeriods.ts":"129","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\BuyTicketModal.tsx":"130","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\UserTicketsModal.tsx":"131","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastRoundCardError.tsx":"132","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastRoundCardDetails.tsx":"133","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\PurchaseWarningModal.tsx":"134","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useAllowance.ts":"135","E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useBuyLottery.ts":"136","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastLotteryActions.tsx":"137","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Timestamp.tsx":"138","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\LotteryCardHeading.tsx":"139","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\helpers\\formatLotteryDate.ts":"140","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TicketInput\\index.ts":"141","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TicketInput\\TicketInput.tsx":"142"},{"size":278,"mtime":1692940153430,"results":"143","hashOfConfig":"144"},{"size":3137,"mtime":1696136844233,"results":"145","hashOfConfig":"144"},{"size":1719,"mtime":1693618139654,"results":"146","hashOfConfig":"144"},{"size":595,"mtime":1692940153434,"results":"147","hashOfConfig":"144"},{"size":806,"mtime":1692941970211,"results":"148","hashOfConfig":"144"},{"size":858,"mtime":1693536872592,"results":"149","hashOfConfig":"144"},{"size":3108,"mtime":1693526749300,"results":"150","hashOfConfig":"144"},{"size":3617,"mtime":1695706906760,"results":"151","hashOfConfig":"144"},{"size":35,"mtime":1692940153446,"results":"152","hashOfConfig":"144"},{"size":34,"mtime":1692940153451,"results":"153","hashOfConfig":"144"},{"size":329,"mtime":1692940153437,"results":"154","hashOfConfig":"144"},{"size":1436,"mtime":1697246126134,"results":"155","hashOfConfig":"144"},{"size":937,"mtime":1692942089463,"results":"156","hashOfConfig":"144"},{"size":942,"mtime":1692940153423,"results":"157","hashOfConfig":"144"},{"size":772,"mtime":1692940153422,"results":"158","hashOfConfig":"144"},{"size":3233,"mtime":1692940153422,"results":"159","hashOfConfig":"144"},{"size":426,"mtime":1692940153412,"results":"160","hashOfConfig":"144"},{"size":286,"mtime":1692940153432,"results":"161","hashOfConfig":"144"},{"size":265,"mtime":1692940153430,"results":"162","hashOfConfig":"144"},{"size":2090,"mtime":1695499372470,"results":"163","hashOfConfig":"144"},{"size":2221,"mtime":1697246228824,"results":"164","hashOfConfig":"144"},{"size":2010,"mtime":1695483173561,"results":"165","hashOfConfig":"144"},{"size":4261,"mtime":1695593697787,"results":"166","hashOfConfig":"144"},{"size":964,"mtime":1692940153438,"results":"167","hashOfConfig":"144"},{"size":566,"mtime":1692940153427,"results":"168","hashOfConfig":"144"},{"size":2120,"mtime":1693007633764,"results":"169","hashOfConfig":"144"},{"size":320,"mtime":1692940153412,"results":"170","hashOfConfig":"144"},{"size":260,"mtime":1692940153428,"results":"171","hashOfConfig":"144"},{"size":371,"mtime":1692940153428,"results":"172","hashOfConfig":"144"},{"size":770,"mtime":1692940153439,"results":"173","hashOfConfig":"144"},{"size":404,"mtime":1692940153423,"results":"174","hashOfConfig":"144"},{"size":2053,"mtime":1692940153421,"results":"175","hashOfConfig":"144"},{"size":1614,"mtime":1692940153439,"results":"176","hashOfConfig":"144"},{"size":2973,"mtime":1693695494794,"results":"177","hashOfConfig":"144"},{"size":193,"mtime":1692940153440,"results":"178","hashOfConfig":"144"},{"size":6517,"mtime":1695594890639,"results":"179","hashOfConfig":"144"},{"size":1236,"mtime":1692940153451,"results":"180","hashOfConfig":"144"},{"size":2626,"mtime":1695592100600,"results":"181","hashOfConfig":"144"},{"size":3733,"mtime":1695592100594,"results":"182","hashOfConfig":"144"},{"size":3825,"mtime":1692940153433,"results":"183","hashOfConfig":"144"},{"size":2133,"mtime":1692940153431,"results":"184","hashOfConfig":"144"},{"size":604,"mtime":1692940153434,"results":"185","hashOfConfig":"144"},{"size":1342,"mtime":1693664851740,"results":"186","hashOfConfig":"144"},{"size":298,"mtime":1692940153412,"results":"187","hashOfConfig":"144"},{"size":400,"mtime":1692940153436,"results":"188","hashOfConfig":"144"},{"size":998,"mtime":1692997855532,"results":"189","hashOfConfig":"144"},{"size":1051,"mtime":1692940153441,"results":"190","hashOfConfig":"144"},{"size":3322,"mtime":1692941499727,"results":"191","hashOfConfig":"144"},{"size":1336,"mtime":1692940153442,"results":"192","hashOfConfig":"144"},{"size":2201,"mtime":1695483002217,"results":"193","hashOfConfig":"144"},{"size":871,"mtime":1692940153449,"results":"194","hashOfConfig":"144"},{"size":324,"mtime":1695593493551,"results":"195","hashOfConfig":"144"},{"size":2534,"mtime":1692997855138,"results":"196","hashOfConfig":"144"},{"size":4978,"mtime":1695704802048,"results":"197","hashOfConfig":"144"},{"size":3486,"mtime":1692997855129,"results":"198","hashOfConfig":"144"},{"size":2433,"mtime":1692940153432,"results":"199","hashOfConfig":"144"},{"size":4720,"mtime":1695507106897,"results":"200","hashOfConfig":"144"},{"size":2041,"mtime":1692940153444,"results":"201","hashOfConfig":"144"},{"size":2288,"mtime":1695498800468,"results":"202","hashOfConfig":"144"},{"size":2002,"mtime":1692940153429,"results":"203","hashOfConfig":"144"},{"size":4516,"mtime":1697386531203,"results":"204","hashOfConfig":"144"},{"size":903,"mtime":1695591939239,"results":"205","hashOfConfig":"144"},{"size":767,"mtime":1692940153448,"results":"206","hashOfConfig":"144"},{"size":676,"mtime":1692940153447,"results":"207","hashOfConfig":"144"},{"size":1243,"mtime":1692940153419,"results":"208","hashOfConfig":"144"},{"size":53,"mtime":1692940153404,"results":"209","hashOfConfig":"144"},{"size":584,"mtime":1692940153436,"results":"210","hashOfConfig":"144"},{"size":2535,"mtime":1692940153425,"results":"211","hashOfConfig":"144"},{"size":1690,"mtime":1692940153428,"results":"212","hashOfConfig":"144"},{"size":1105,"mtime":1692940153435,"results":"213","hashOfConfig":"144"},{"size":819,"mtime":1692940153409,"results":"214","hashOfConfig":"144"},{"size":545,"mtime":1692940153411,"results":"215","hashOfConfig":"144"},{"size":1969,"mtime":1695499102353,"results":"216","hashOfConfig":"144"},{"size":2079,"mtime":1695498508498,"results":"217","hashOfConfig":"144"},{"size":1336,"mtime":1692997855141,"results":"218","hashOfConfig":"144"},{"size":2055,"mtime":1692940153427,"results":"219","hashOfConfig":"144"},{"size":372,"mtime":1693625574217,"results":"220","hashOfConfig":"144"},{"size":938,"mtime":1692940153404,"results":"221","hashOfConfig":"144"},{"size":2834,"mtime":1692940153426,"results":"222","hashOfConfig":"144"},{"size":1316,"mtime":1692940153434,"results":"223","hashOfConfig":"144"},{"size":2033,"mtime":1692940153429,"results":"224","hashOfConfig":"144"},{"size":4693,"mtime":1692940153419,"results":"225","hashOfConfig":"144"},{"size":3643,"mtime":1695499551884,"results":"226","hashOfConfig":"144"},{"size":1023,"mtime":1692940153430,"results":"227","hashOfConfig":"144"},{"size":42,"mtime":1692940153407,"results":"228","hashOfConfig":"144"},{"size":40,"mtime":1692940153410,"results":"229","hashOfConfig":"144"},{"size":797,"mtime":1692940153407,"results":"230","hashOfConfig":"144"},{"size":2084,"mtime":1692940153410,"results":"231","hashOfConfig":"144"},{"size":36,"mtime":1692940153409,"results":"232","hashOfConfig":"144"},{"size":78,"mtime":1692940153405,"results":"233","hashOfConfig":"144"},{"size":722,"mtime":1692940153408,"results":"234","hashOfConfig":"144"},{"size":1164,"mtime":1692940153404,"results":"235","hashOfConfig":"144"},{"size":614,"mtime":1693673619358,"results":"236","hashOfConfig":"144"},{"size":106,"mtime":1693616423149,"results":"237","hashOfConfig":"144"},{"size":1789,"mtime":1693694437329,"results":"238","hashOfConfig":"144"},{"size":37,"mtime":1692940153474,"results":"239","hashOfConfig":"144"},{"size":2703,"mtime":1692940153459,"results":"240","hashOfConfig":"144"},{"size":1243,"mtime":1692940153461,"results":"241","hashOfConfig":"144"},{"size":1874,"mtime":1692940153461,"results":"242","hashOfConfig":"144"},{"size":193,"mtime":1692940153462,"results":"243","hashOfConfig":"144"},{"size":1959,"mtime":1692940153462,"results":"244","hashOfConfig":"144"},{"size":7687,"mtime":1692940153438,"results":"245","hashOfConfig":"144"},{"size":335,"mtime":1692940153423,"results":"246","hashOfConfig":"144"},{"size":944,"mtime":1692940153471,"results":"247","hashOfConfig":"144"},{"size":7383,"mtime":1692940153471,"results":"248","hashOfConfig":"144"},{"size":1278,"mtime":1692940153463,"results":"249","hashOfConfig":"144"},{"size":533,"mtime":1692940153466,"results":"250","hashOfConfig":"144"},{"size":2022,"mtime":1692940153464,"results":"251","hashOfConfig":"144"},{"size":3351,"mtime":1692940153429,"results":"252","hashOfConfig":"144"},{"size":2841,"mtime":1692940153468,"results":"253","hashOfConfig":"144"},{"size":2406,"mtime":1692940153470,"results":"254","hashOfConfig":"144"},{"size":1148,"mtime":1692940153472,"results":"255","hashOfConfig":"144"},{"size":3055,"mtime":1692940153471,"results":"256","hashOfConfig":"144"},{"size":2641,"mtime":1692940153473,"results":"257","hashOfConfig":"144"},{"size":959,"mtime":1692940153465,"results":"258","hashOfConfig":"144"},{"size":2913,"mtime":1692940153465,"results":"259","hashOfConfig":"144"},{"size":847,"mtime":1692940153426,"results":"260","hashOfConfig":"144"},{"size":447,"mtime":1692940153429,"results":"261","hashOfConfig":"144"},{"size":1232,"mtime":1692940153474,"results":"262","hashOfConfig":"144"},{"size":705,"mtime":1692940153463,"results":"263","hashOfConfig":"144"},{"size":1935,"mtime":1692940153466,"results":"264","hashOfConfig":"144"},{"size":2819,"mtime":1692940153472,"results":"265","hashOfConfig":"144"},{"size":3067,"mtime":1692940153469,"results":"266","hashOfConfig":"144"},{"size":1344,"mtime":1692940153472,"results":"267","hashOfConfig":"144"},{"size":574,"mtime":1692940153467,"results":"268","hashOfConfig":"144"},{"size":3826,"mtime":1692940153468,"results":"269","hashOfConfig":"144"},{"size":63,"mtime":1692940153465,"results":"270","hashOfConfig":"144"},{"size":798,"mtime":1692940153437,"results":"271","hashOfConfig":"144"},{"size":1290,"mtime":1692940153437,"results":"272","hashOfConfig":"144"},{"size":4255,"mtime":1692940153469,"results":"273","hashOfConfig":"144"},{"size":2018,"mtime":1692940153470,"results":"274","hashOfConfig":"144"},{"size":325,"mtime":1692940153467,"results":"275","hashOfConfig":"144"},{"size":2393,"mtime":1692940153467,"results":"276","hashOfConfig":"144"},{"size":1356,"mtime":1692940153469,"results":"277","hashOfConfig":"144"},{"size":1627,"mtime":1692940153425,"results":"278","hashOfConfig":"144"},{"size":1608,"mtime":1692940153425,"results":"279","hashOfConfig":"144"},{"size":1643,"mtime":1692940153466,"results":"280","hashOfConfig":"144"},{"size":528,"mtime":1692940153470,"results":"281","hashOfConfig":"144"},{"size":948,"mtime":1692940153463,"results":"282","hashOfConfig":"144"},{"size":359,"mtime":1692940153473,"results":"283","hashOfConfig":"144"},{"size":41,"mtime":1692940153409,"results":"284","hashOfConfig":"144"},{"size":1774,"mtime":1692940153409,"results":"285","hashOfConfig":"144"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},"181iqkz",{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"288"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"288"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"288"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"288"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"288"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"288"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"288"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"288"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"288"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"288"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"288"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"288"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"288"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"288"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"492"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"507"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},"E:\\Code\\DEX\\chewyswap-farms\\src\\index.tsx",[],["588","589","590","591","592"],"E:\\Code\\DEX\\chewyswap-farms\\src\\App.tsx",["593","594"],"import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport styled from 'styled-components'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\n// const Pools = lazy(() => import('./views/Pools'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Nft = lazy(() => import('./views/Nft'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst BodyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 32px 16px;\r\n  min-height: calc(100vh - 152px);\r\n  align-items: center;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  z-index: 1;\r\n\r\n  background-image: url('/images/back.png');\r\n  background-repeat: repeat;\r\n`\r\n\r\nconst App: React.FC = () => {\r\n  const { account, connect } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <BodyWrapper>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/treatbowl\">\r\n              <Farms tokenMode/>\r\n            </Route>\r\n            {/* <Route path=\"/pools\"> */}\r\n            {/*  <Pools /> */}\r\n            {/* </Route> */}\r\n            <Route path=\"/lottery\">\r\n              <Lottery />\r\n            </Route>\r\n            {/* <Route path=\"/ifo\"> */}\r\n            {/*  <Ifos /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/nft\"> */}\r\n            {/*  <Nft /> */}\r\n            {/* </Route> */}\r\n            {/* Redirect */}\r\n            {/* <Route path=\"/staking\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/syrup\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n          </BodyWrapper>\r\n        </Suspense>\r\n      </Menu>\r\n      {/* <NftGlobalNotification /> */}\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\Providers.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\style\\Global.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\PageLoader.tsx",["595"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap-libs/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background-image: url('/images/back.png');\r\n  background-repeat: repeat;\r\n`\r\n\r\nconst BodyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 32px 16px;\r\n  min-height: calc(100vh - 152px);\r\n  align-items: center;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  z-index: 1;\r\n\r\n  background-image: url('/images/back.png');\r\n  background-repeat: repeat;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\NotFound.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Nft\\components\\NftGlobalNotification.tsx",["596","597"],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\hooks.ts",["598","599"],"import BigNumber from 'bignumber.js'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\r\nimport { State, Farm, Pool } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    // dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 0 // USDT-BONE LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const pid = 2 // CAKE-BNB LP\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n  // const pid = 1; // CHEWY-USDT LP\r\n  // const farm = useFarmFromPid(pid);\r\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const cakePrice = usePriceCakeBusd();\r\n  let value = new BigNumber(0);\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken) {\r\n      // console.log('Farm Pid: ', i);\r\n      // console.log(farm.lpTotalInQuoteToken);\r\n      // console.log(bnbPrice.toNumber());\r\n      let val;\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\r\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\r\n      }else{\r\n        val = (farm.lpTotalInQuoteToken);\r\n      }\r\n      value = value.plus(val);\r\n    }\r\n  }\r\n  return value;\r\n}","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getRpcUrl.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Menu\\index.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\ThemeContext.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\RefreshContext.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\BlockContext.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\Localisation\\languageContext.tsx",["600","601"],"import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then(r=>r.json())\r\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error(\"ERROR\");\r\n          console.error(e);\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\layout\\Page.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\actions.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\types.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Menu\\config.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\Home.tsx",["602"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport FarmStakingCard from './components/FarmStakingCard'\r\nimport LotteryCard from './components/LotteryCard'\r\nimport CakeStats from './components/CakeStats'\r\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\r\nimport TwitterCard from './components/TwitterCard'\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  background-image: url('/images/chewy/3.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  padding-top: 116px;\r\n  text-align: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    background-image: url('/images/chewy/3.png'), url('/images/chewy/3b.png');\r\n    background-position: left center, right center;\r\n    height: 165px;\r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 48px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\r\n          {TranslateString(576, 'ChewySwap Farms')}\r\n        </Heading>\r\n        <Text>{TranslateString(578, 'Earn Tasty CHEWY on Shibarium!')}</Text>\r\n      </Hero>\r\n      <div>\r\n        <Cards>\r\n          <FarmStakingCard />\r\n          <TwitterCard/>\r\n          <CakeStats />\r\n          <TotalValueLockedCard />\r\n        </Cards>\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\Farms.tsx",["603","604","605","606"],"import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nexport interface FarmsProps{\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const {tokenMode} = farmsProps;\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && !farm.hide && farm.multiplier !== '0X')\r\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && !farm.hide && farm.multiplier === '0X')\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.chewyPerBlock || 0.2).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18))\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n\r\n        let apy = cakePrice.times(cakeRewardPerYear);\r\n\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice);\r\n        }\r\n\r\n        if(totalValue.comparedTo(0) > 0){\r\n          apy = apy.div(totalValue);\r\n        }\r\n\r\n        return { ...farm, apy }\r\n      })\r\n      return farmsToDisplayWithAPY.map((farm) => (\r\n        <FarmCard\r\n          key={farm.pid}\r\n          farm={farm}\r\n          removed={removed}\r\n          bnbPrice={bnbPrice}\r\n          cakePrice={cakePrice}\r\n          ethereum={ethereum}\r\n          account={account}\r\n        />\r\n      ))\r\n    },\r\n    [bnbPrice, account, cakePrice, ethereum],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/>\r\n      <div>\r\n        <Divider />\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsList(inactiveFarms, true)}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n      <Image src=\"/images/chewy/8.png\" alt=\"illustration\" width={1400} height={786} responsive />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\multicall.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useI18n.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\nfts.ts",[],["607","608","609","610","611"],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\layout\\Container.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useRefresh.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTheme.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\web3.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\Localisation\\translationsContext.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\localisation\\languageCodes.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\translateTextHelpers.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\TwitterCard.tsx",["612","613","614"],"import React from 'react'\r\nimport { Card, CardBody, Heading, Text, Button, Link, Tag, Skeleton, InfoIcon, CommunityIcon } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetAnnouncements from 'hooks/useAnnouncements'\r\nimport Spacer from 'components/Spacer'\r\nimport { format } from 'date-fns'\r\nimport MarkdownText from 'components/MarkdownText'\r\n\r\nconst StyledTwitterCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst ScrollableText = styled.div`\r\n  height: 330px;\r\n  overflow-y: scroll;\r\n  white-space: pre-wrap;\r\n  line-height: 1.3em;\r\n\r\n`\r\n\r\nconst TagC = styled(Tag)`\r\n\r\n  display: inline;\r\n  margin-left: 10px;\r\n\r\n`\r\nconst Skell = styled(Skeleton)`\r\n  opacity: 0.2;\r\n`\r\nconst Info = styled(CommunityIcon)`\r\n  display: inline;\r\n  padding-right: 0px;\r\n  margin-left: -0.3em;\r\n  margin-right: 0.75em;\r\n`\r\n\r\nfunction AnnounceItems() {\r\n  const { status, data, error, refetch } = useGetAnnouncements()\r\n\r\n  try {\r\n    if (status === \"loading\") {\r\n      return (\r\n        <>\r\n          <Skell height=\"100%\" width=\"400px\" animation=\"waves\" />\r\n        </>\r\n      )\r\n    }\r\n    if (status === \"error\") {\r\n      return (\r\n        <>\r\n          Error Loading: {error}\r\n          <Button onClick={() => refetch()}>Retry</Button>\r\n        </>\r\n      )\r\n    }\r\n    if (data && data.length > 0) {\r\n      // data.sort((a, b) => (a.id < b.id) ? 1 : -1) // Not needed, sorted in API call\r\n      return (\r\n        <>\r\n          {data.map(item => {\r\n            return <Item key={item.id} id={item.id} item={item.attributes} />;\r\n          })}\r\n        </>\r\n      )\r\n    }\r\n  } catch (err) {\r\n    return err\r\n  }\r\n\r\n  return (<> Loading </>);\r\n\r\n}\r\n\r\nfunction Item(props) {\r\n  const { item } = props\r\n  const date = new Date(item.createdAt);\r\n  const formattedDate = format(date, 'EEEE MMMM d, yyyy') // Tuesday May 11, 2021\r\n  if (!item) return null;\r\n\r\n  return (\r\n    <>\r\n      <Heading size=\"md\" mt=\"10px\">\r\n        {item.Title}\r\n        <TagC variant=\"secondary\" outline>\r\n          {item.Category}\r\n        </TagC>\r\n      </Heading>\r\n      <Text fontSize=\"12px\" color=\"secondary\" ml=\"8px\" mb=\"5px\">\r\n        {formattedDate}\r\n      </Text>\r\n      <Spacer size=\"sm\" />\r\n      <MarkdownText>\r\n        {item.Content}\r\n      </MarkdownText>\r\n      <Spacer size=\"lg\" />\r\n    </>\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\nconst TwitterCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTwitterCard>\r\n      <CardBody>\r\n      <Info />\r\n        <Heading size=\"lg\" mb=\"10px\" style={{display: \"inline\"}}>\r\n          {TranslateString(10003, 'Chewy News')}\r\n        </Heading>\r\n        <ScrollableText>\r\n          {AnnounceItems()}\r\n        </ScrollableText>\r\n      </CardBody>\r\n    </StyledTwitterCard>\r\n  );\r\n}\r\n\r\nexport default TwitterCard\r\n\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\Divider.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\FarmCard.tsx",["615"],"import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(45deg,\r\n  rgba(255, 0, 0, 1) 0%,\r\n  rgba(255, 154, 0, 1) 10%,\r\n  rgba(208, 222, 33, 1) 20%,\r\n  rgba(79, 220, 74, 1) 30%,\r\n  rgba(63, 218, 216, 1) 40%,\r\n  rgba(47, 201, 226, 1) 50%,\r\n  rgba(28, 127, 238, 1) 60%,\r\n  rgba(95, 21, 242, 1) 70%,\r\n  rgba(186, 12, 248, 1) 80%,\r\n  rgba(251, 7, 217, 1) 90%,\r\n  rgba(255, 0, 0, 1) 100%);\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 16px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 32px;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol\r\n  const earnLabel = 'CHEWY'\r\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\r\n\r\n  return (\r\n    <FCard>\r\n      {farm.tokenSymbol === 'CHEWY' && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        risk={risk}\r\n        depositFee={farm.depositFeeBP}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent='space-between' alignItems='center'>\r\n          <Text>{TranslateString(352, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent='space-between'>\r\n        <Text>{TranslateString(318, 'Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent='space-between'>\r\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\r\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          isTokenOnly={farm.isTokenOnly}\r\n          bscScanAddress={\r\n            farm.isTokenOnly ?\r\n              `https://www.shibariumscan.io/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              :\r\n              `https://www.shibariumscan.io/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          quoteTokenAdresses={quoteTokenAdresses}\r\n          quoteTokenSymbol={quoteTokenSymbol}\r\n          tokenAddresses={tokenAddresses}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\TotalValueLockedCard.tsx",["616","617"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useGetStats } from 'hooks/api'\r\nimport { useTotalValue } from '../../../state/hooks'\r\nimport CardValue from './CardValue'\r\n\r\nconst StyledTotalValueLockedCard = styled(Card)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n`\r\n\r\nconst TotalValueLockedCard = () => {\r\n  const TranslateString = useI18n()\r\n  // const data = useGetStats()\r\n  const totalValue = useTotalValue();\r\n  // const tvl = totalValue.toFixed(2);\r\n\r\n  return (\r\n    <StyledTotalValueLockedCard>\r\n      <CardBody>\r\n        <Heading size=\"lg\" mb=\"24px\">\r\n          {TranslateString(999, 'Total Value Locked (TVL)')}\r\n        </Heading>\r\n        <>\r\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\r\n          {/* <Heading size=\"xl\"> */}\r\n            <CardValue value={totalValue.toNumber()} prefix=\"$\" decimals={2}/>\r\n          {/* </Heading> */}\r\n          <Text color=\"textSubtle\">{TranslateString(999, 'Across all Farms and Pools')}</Text>\r\n        </>\r\n      </CardBody>\r\n    </StyledTotalValueLockedCard>\r\n  )\r\n}\r\n\r\nexport default TotalValueLockedCard\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CakeStats.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\FarmStakingCard.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\pools\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\farms\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\addressHelpers.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmTabButtons\\index.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\layout\\Flex.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\formatBalance.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useAllEarnings.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\ApyButton.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\CardActionsContainer.tsx",["618"],"import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if(isTokenOnly){\r\n      return getContract(ethereum as provider, tokenAddress);\r\n    }\r\n    return getContract(ethereum as provider, lpAddress);\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\r\n    ) : (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(999, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          CHEWY\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\CardHeading.tsx",["619","620","621","622"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag, NoFeeTag, RiskTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  risk?: number\r\n  depositFee?: number\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  risk,\r\n  farmImage,\r\n  tokenSymbol,\r\n  depositFee,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {depositFee === 0 ? <NoFeeTag /> : null}\r\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\r\n          {/* <RiskTag risk={risk} /> */}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\DetailsSection.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CardValue.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\farms\\fetchFarmUser.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\farms\\fetchFarms.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\pools\\fetchPoolsUser.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\state\\pools\\fetchPools.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\ApyCalculatorModal.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\HarvestAction.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\FarmCard\\StakeAction.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTokenBalance.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\farms.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\contracts.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CakeWalletBalance.tsx",["623","624","625"],"import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeWalletBalance = ({ cakeBalance }) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={cakeBalance} fontSize=\"24px\" />\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Home\\components\\CakeHarvestBalance.tsx",["626","627"],"import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useAllEarnings from 'hooks/useAllEarnings'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeHarvestBalance = ({earningsSum}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '60px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={earningsSum} />\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\pools.ts",["628","629"],"import { PoolConfig, QuoteToken, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  // {\r\n  //   sousId: 0,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  //   contractAddress: {\r\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '10',\r\n  //   sortOrder: 1,\r\n  //   isFinished: false,\r\n  //   tokenDecimals: 18,\r\n  // },\r\n  // {\r\n  //   sousId: 1,\r\n  //   tokenName: 'TWT',\r\n  //   stakingTokenName: QuoteToken.SYRUP,\r\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n  //   contractAddress: {\r\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://trustwallet.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '20',\r\n  //   sortOrder: 999,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  // },\r\n]\r\n\r\nexport default pools\r\n","E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ExpandableSectionButton\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getLiquidityUrlPathParts.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useApprove.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useStake.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\erc20.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Tags.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\UnlockButton.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\WithdrawModal.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Farms\\components\\DepositModal.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useFarmsWithBalance.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useHarvest.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ExpandableSectionButton\\ExpandableSectionButton.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useContract.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\compoundApyHelpers.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useUnstake.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\ifo.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\callHelpers.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useWeb3.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ModalActions\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TokenInput\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\ModalActions\\ModalActions.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TokenInput\\TokenInput.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Spacer\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Input\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Spacer\\Spacer.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\Input\\Input.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useAnnouncements.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\config\\constants\\queryKeys.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\MarkdownText\\index.tsx",[],["630","631","632","633","634"],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\Lottery.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\PastDrawsPage.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\NextDrawPage.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Divider.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Hero.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\lotteryUtils.js",[],["635","636","637","638","639"],"E:\\Code\\DEX\\chewyswap-farms\\src\\contexts\\PastLotteryDataContext.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\UnlockWalletCard.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\WinningNumbers.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\HowItWorks.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\PastDrawsHistoryCard.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\LotteryProgress.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTickets.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\index.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\index.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\YourPrizesCard\\index.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TotalPrizesCard\\index.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\helpers\\CountdownHelpers.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\Legend.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\HistoryChart.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useGetLotteryHasDrawn.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useTimer.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\hooks\\useGetRecentLotteryRoundData.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Loading.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastLotterySearcher.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\YourPrizesCard\\PrizesWonContent.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\TicketActions.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\YourPrizesCard\\NoPrizesContent.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastRoundCard.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PrizeGrid.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastDrawsHistory\\LineChartWrapper.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getLotteryRoundData.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\utils\\getTimePeriods.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\BuyTicketModal.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\UserTicketsModal.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastRoundCardError.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastRoundCardDetails.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\TicketCard\\PurchaseWarningModal.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useAllowance.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\hooks\\useBuyLottery.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\PastLotteryRoundViewer\\PastLotteryActions.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\Timestamp.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\components\\LotteryCardHeading.tsx",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\views\\Lottery\\helpers\\formatLotteryDate.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TicketInput\\index.ts",[],"E:\\Code\\DEX\\chewyswap-farms\\src\\components\\TicketInput\\TicketInput.tsx",[],{"ruleId":"640","replacedBy":"641"},{"ruleId":"642","replacedBy":"643"},{"ruleId":"644","replacedBy":"645"},{"ruleId":"646","replacedBy":"647"},{"ruleId":"648","replacedBy":"649"},{"ruleId":"650","severity":1,"message":"651","line":2,"column":35,"nodeType":"652","messageId":"653","endLine":2,"endColumn":43},{"ruleId":"650","severity":1,"message":"654","line":11,"column":8,"nodeType":"652","messageId":"653","endLine":11,"endColumn":29},{"ruleId":"650","severity":1,"message":"655","line":15,"column":7,"nodeType":"652","messageId":"653","endLine":15,"endColumn":18},{"ruleId":"650","severity":1,"message":"656","line":54,"column":11,"nodeType":"652","messageId":"653","endLine":54,"endColumn":25},{"ruleId":"657","severity":1,"message":"658","line":82,"column":7,"nodeType":"659","messageId":"660","endLine":82,"endColumn":18},{"ruleId":"650","severity":1,"message":"661","line":2,"column":21,"nodeType":"652","messageId":"653","endLine":2,"endColumn":28},{"ruleId":"650","severity":1,"message":"662","line":5,"column":37,"nodeType":"652","messageId":"653","endLine":5,"endColumn":62},{"ruleId":"650","severity":1,"message":"663","line":33,"column":7,"nodeType":"652","messageId":"653","endLine":33,"endColumn":43},{"ruleId":"657","severity":1,"message":"658","line":60,"column":7,"nodeType":"659","messageId":"660","endLine":60,"endColumn":18},{"ruleId":"650","severity":1,"message":"664","line":7,"column":8,"nodeType":"652","messageId":"653","endLine":7,"endColumn":19},{"ruleId":"650","severity":1,"message":"665","line":7,"column":17,"nodeType":"652","messageId":"653","endLine":7,"endColumn":24},{"ruleId":"650","severity":1,"message":"666","line":8,"column":27,"nodeType":"652","messageId":"653","endLine":8,"endColumn":41},{"ruleId":"650","severity":1,"message":"667","line":8,"column":43,"nodeType":"652","messageId":"653","endLine":8,"endColumn":56},{"ruleId":"650","severity":1,"message":"668","line":26,"column":9,"nodeType":"652","messageId":"653","endLine":26,"endColumn":24},{"ruleId":"640","replacedBy":"669"},{"ruleId":"642","replacedBy":"670"},{"ruleId":"644","replacedBy":"671"},{"ruleId":"646","replacedBy":"672"},{"ruleId":"648","replacedBy":"673"},{"ruleId":"650","severity":1,"message":"674","line":2,"column":49,"nodeType":"652","messageId":"653","endLine":2,"endColumn":53},{"ruleId":"650","severity":1,"message":"675","line":2,"column":70,"nodeType":"652","messageId":"653","endLine":2,"endColumn":78},{"ruleId":"650","severity":1,"message":"676","line":15,"column":7,"nodeType":"652","messageId":"653","endLine":15,"endColumn":10},{"ruleId":"650","severity":1,"message":"677","line":5,"column":10,"nodeType":"652","messageId":"653","endLine":5,"endColumn":24},{"ruleId":"650","severity":1,"message":"678","line":3,"column":35,"nodeType":"652","messageId":"653","endLine":3,"endColumn":43},{"ruleId":"650","severity":1,"message":"679","line":5,"column":10,"nodeType":"652","messageId":"653","endLine":5,"endColumn":21},{"ruleId":"650","severity":1,"message":"680","line":8,"column":26,"nodeType":"652","messageId":"653","endLine":8,"endColumn":43},{"ruleId":"650","severity":1,"message":"681","line":4,"column":10,"nodeType":"652","messageId":"653","endLine":4,"endColumn":22},{"ruleId":"650","severity":1,"message":"682","line":4,"column":24,"nodeType":"652","messageId":"653","endLine":4,"endColumn":31},{"ruleId":"650","severity":1,"message":"683","line":4,"column":43,"nodeType":"652","messageId":"653","endLine":4,"endColumn":50},{"ruleId":"650","severity":1,"message":"684","line":28,"column":3,"nodeType":"652","messageId":"653","endLine":28,"endColumn":7},{"ruleId":"650","severity":1,"message":"685","line":4,"column":8,"nodeType":"652","messageId":"653","endLine":4,"endColumn":23},{"ruleId":"650","severity":1,"message":"686","line":6,"column":10,"nodeType":"652","messageId":"653","endLine":6,"endColumn":24},{"ruleId":"650","severity":1,"message":"687","line":7,"column":10,"nodeType":"652","messageId":"653","endLine":7,"endColumn":26},{"ruleId":"650","severity":1,"message":"688","line":4,"column":8,"nodeType":"652","messageId":"653","endLine":4,"endColumn":17},{"ruleId":"650","severity":1,"message":"689","line":6,"column":8,"nodeType":"652","messageId":"653","endLine":6,"endColumn":22},{"ruleId":"650","severity":1,"message":"690","line":1,"column":22,"nodeType":"652","messageId":"653","endLine":1,"endColumn":32},{"ruleId":"650","severity":1,"message":"691","line":1,"column":34,"nodeType":"652","messageId":"653","endLine":1,"endColumn":46},{"ruleId":"640","replacedBy":"692"},{"ruleId":"642","replacedBy":"693"},{"ruleId":"644","replacedBy":"694"},{"ruleId":"646","replacedBy":"695"},{"ruleId":"648","replacedBy":"696"},{"ruleId":"640","replacedBy":"641"},{"ruleId":"642","replacedBy":"643"},{"ruleId":"644","replacedBy":"645"},{"ruleId":"646","replacedBy":"647"},{"ruleId":"648","replacedBy":"649"},"lines-around-directive",["697"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'NftGlobalNotification' is defined but never used.","'BodyWrapper' is assigned a value but never used.","'checkNftStatus' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'useMemo' is defined but never used.","'fetchPoolsPublicDataAsync' is defined but never used.","'fetchTranslationsForSelectedLanguage' is assigned a value but never used.","'LotteryCard' is defined but never used.","'Heading' is defined but never used.","'CAKE_PER_BLOCK' is defined but never used.","'CAKE_POOL_PID' is defined but never used.","'TranslateString' is assigned a value but never used.",["697"],[],[],[],[],"'Link' is defined but never used.","'InfoIcon' is defined but never used.","'Row' is assigned a value but never used.","'communityFarms' is defined but never used.","'Skeleton' is defined but never used.","'useGetStats' is defined but never used.","'useFarmFromSymbol' is defined but never used.","'CommunityTag' is defined but never used.","'CoreTag' is defined but never used.","'RiskTag' is defined but never used.","'risk' is defined but never used.","'useTokenBalance' is defined but never used.","'getCakeAddress' is defined but never used.","'getBalanceNumber' is defined but never used.","'BigNumber' is defined but never used.","'useAllEarnings' is defined but never used.","'QuoteToken' is defined but never used.","'PoolCategory' is defined but never used.",["697"],[],[],[],[],"padding-line-between-statements"]